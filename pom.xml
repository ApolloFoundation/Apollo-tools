<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.apollocurrency</groupId>
  <artifactId>apl-tools</artifactId>
  <name>apl-tools</name>
  <version>1.51.0</version>
  <packaging>jar</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
    <java.version>11</java.version>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <apl-bom.version>1.50.36</apl-bom.version>
    <base-dist-dir>ApolloWallet/apollo-tools</base-dist-dir>
    <zip-file-name>apollo-tools</zip-file-name>
  </properties>

  <repositories>
    <!-- arti.firstbridge.work does not chache in apl repo so we have to add Maven Central here -->
    <repository>
      <id>central</id>
      <name>Maven Repository Switchboard</name>
      <layout>default</layout>
      <url>https://repo1.maven.org/maven2</url>
    </repository>
    <!--   arti.firstbridge.work for follwing artifacts: web-wallet, fbcrypto -->
    <repository>
      <id>apl</id>
      <name>arti.firstbridge.work-releases</name>
      <url>https://arti.firstbridge.work/artifactory/apl</url>
    </repository>
  </repositories>
  <profiles>
    <!-- The Configuration of the development profile -->
    <profile>
      <id>dev</id>
      <properties>
        <zipExecutionPhase>none</zipExecutionPhase>
      </properties>
    </profile>
    <!-- The Configuration of the production profile -->
    <profile>
      <id>prod</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <zipExecutionPhase>package</zipExecutionPhase>
      </properties>
    </profile>
  </profiles>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.apollocurrency</groupId>
        <artifactId>apl-bom</artifactId>
        <version>${apl-bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>

    <dependency>
      <groupId>com.apollocurrency</groupId>
      <artifactId>apl-crypto</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.junit</groupId>
          <artifactId>junit-bom</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.apollocurrency</groupId>
      <artifactId>apl-core</artifactId>
      <exclusions>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.apollocurrency</groupId>
      <artifactId>apl-updater</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.apollocurrency</groupId>
          <artifactId>apl-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.apollocurrency</groupId>
          <artifactId>apl-crypto</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.apollocurrency</groupId>
          <artifactId>apl-utils</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- command line arguments processing -->
    <dependency>
      <groupId>com.beust</groupId>
      <artifactId>jcommander</artifactId>
    </dependency>
    <!-- unit tests -->
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-commons</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.weld</groupId>
      <artifactId>weld-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.janino</groupId>
      <artifactId>janino</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <forceJavacCompilerUse>true</forceJavacCompilerUse>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.2</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib</classpathPrefix>
              <mainClass>com.apollocurrency.aplwallet.apl.tools.ApolloTools</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>ca.szc.maven</groupId>
        <artifactId>jsonpath-maven-plugin</artifactId>
        <version>1.2.0</version>
        <executions>
          <execution>
            <id>update-version</id>
            <phase>process-resources</phase>
            <goals>
              <goal>modify</goal>
            </goals>
            <configuration>
              <file>${basedir}/packaging/pkg-apollo-tools.json</file>
              <formatter>conventional</formatter>
              <modifications>
                <modification>
                  <expression>$.version</expression>
                  <value>${project.version}</value>
                </modification>
              </modifications>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.2</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <excludeTypes>zip</excludeTypes>
              <excludeArtifactIds>weld-junit5,weld-junit-common,jsonassert</excludeArtifactIds>
              <excludeGroupIds>org.junit,org.mockito,org.opentest4j,org.hibernate.javax.persistence
              </excludeGroupIds>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- create cross-platform zip distribution -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>distro-assembly</id>
            <phase>${zipExecutionPhase}</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>src/assembly/zipdist.xml</descriptor>
              </descriptors>
              <appendAssemblyId>false</appendAssemblyId>
              <finalName>${zip-file-name}-${project.version}-NoOS-NoArch</finalName>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- calculate SHA-256 sums -->
      <plugin>
        <groupId>net.nicoulaj.maven.plugins</groupId>
        <artifactId>checksum-maven-plugin</artifactId>
        <version>1.9</version>
        <executions>
          <execution>
            <phase>${zipExecutionPhase}</phase>
            <goals>
              <goal>files</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <fileSets>
            <fileSet>
              <directory>${project.build.directory}</directory>
              <includes>
                <include>${zip-file-name}-${project.version}-NoOS-NoArch.zip</include>
              </includes>
            </fileSet>
          </fileSets>
          <algorithms>
            <algorithm>SHA-256</algorithm>
          </algorithms>
          <individualFiles>true</individualFiles>
          <types>
            <type>zip</type>
          </types>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>